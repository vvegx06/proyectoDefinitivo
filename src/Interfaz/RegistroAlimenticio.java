/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import javax.swing.JOptionPane;

/**
 *
 * @author gaort
 */

public class RegistroAlimenticio extends javax.swing.JFrame {

    

    public RegistroAlimenticio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RegistrarA = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Animalbutt = new javax.swing.JLabel();
        horariotxt = new javax.swing.JTextField();
        consumirtxt = new javax.swing.JTextField();
        frecuenciatxt = new javax.swing.JTextField();
        animaltxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel1.setText("Registro Alimenticio");

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel2.setText("Horario (Diurno /  Nocturno)");

        jLabel3.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel3.setText("Alimentos a consumir");

        jLabel4.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel4.setText("Frecuencia");

        RegistrarA.setText("Registrar alimentación");
        RegistrarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarAActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar info");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Eliminar información");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Modificar info");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Animalbutt.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Animalbutt.setText("Animal");

        horariotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horariotxtActionPerformed(evt);
            }
        });

        consumirtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumirtxtActionPerformed(evt);
            }
        });

        frecuenciatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frecuenciatxtActionPerformed(evt);
            }
        });

        animaltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animaltxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(Animalbutt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(frecuenciatxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(RegistrarA, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(188, 188, 188))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(consumirtxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                            .addComponent(animaltxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(horariotxt, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(185, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Animalbutt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(animaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horariotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consumirtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frecuenciatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(RegistrarA, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Ventana1 ventana = new Ventana1();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String animal = JOptionPane.showInputDialog(null,"Ingrese el animal que desea modificar la alimentacion");
        
        Interfaz modificar = new Interfaz();
        modificar.PrecargadaAL(modificar.arrAli);

       
        boolean encontrado = false;

        for (int i = 0; i < modificar.arrAli.length; i++) {
            if (modificar.arrAli[i] != null && animal.equalsIgnoreCase(modificar.arrAli[i].getAnimal())) {
                encontrado = true;

                String Animal = JOptionPane.showInputDialog("Ingrese el nuevo Animal: ");
                modificar.arrAli[i].setAnimal(animal);

                String horario = JOptionPane.showInputDialog("Ingrese el nuevo horario: ");
                modificar.arrAli[i].setHorario(horario);

                String alimento = JOptionPane.showInputDialog("Ingrese el nuevo alimento del animal: ");
                modificar.arrAli[i].setAlimentos(alimento);

                String frecuencia = JOptionPane.showInputDialog("Ingrese la nueva frecuencia de alimentacion: ");
                modificar.arrAli[i].setFrecuencia(frecuencia);

                break;

            }
        }
              
        if (encontrado) {
            JOptionPane.showMessageDialog(null, "Modificaciones exitosas");
        } else {
            JOptionPane.showMessageDialog(null, "alimentacion no encontrada");
        }


        StringBuilder sb = new StringBuilder("Lista actualizada:\n");
        for (int i = 0; i < modificar.arrAli.length; i++) {
            if (modificar.arrAli[i] != null) {
                sb.append(modificar.arrAli[i].toString()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, sb.toString());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String Animal = JOptionPane.showInputDialog(null, "Ingrese el nombre del animal al que desea eliminar la alimentacion");
        
        Interfaz eliminar = new Interfaz();
        eliminar.PrecargadaAL(eliminar.arrAli);

        
        boolean encontrar = false;

        
        for (int i = 0; i < eliminar.arrAli.length; i++) {
            if (eliminar.arrAli[i] != null && eliminar.arrAli[i].getAnimal().equalsIgnoreCase(Animal)) {
                eliminar.arrAnimal[i] = null;
                encontrar = true;
                break;
            }

        }

        if (encontrar) {
            JOptionPane.showMessageDialog(null, "Alimentacion eliminada");
        } else {
            JOptionPane.showMessageDialog(null, "Alimentación no encontrada");
        }

        
        StringBuilder sb = new StringBuilder("Lista actualizada:\n");
        for (int i = 0; i < eliminar.arrAli.length; i++) {
            if (eliminar.arrAli[i] != null) {
                sb.append(eliminar.arrAli[i].toString()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, sb.toString());

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         String Animal = JOptionPane.showInputDialog(null, "Ingrese el animal deseado para ver su alimentación");
        
        Interfaz encontrar = new Interfaz();
        
        encontrar.PrecargadaAL(encontrar.arrAli);
        
        boolean encontrado = false;
        
        for (int i = 0; i < encontrar.arrAli.length; i++) {
            if (encontrar.arrAnimal[i] != null && Animal.equals(encontrar.arrAli[i].getAnimal())) {
                JOptionPane.showMessageDialog(null, encontrar.arrAli[i].toString());
                encontrado = true;
                break;
            }
            
        }
        if (!encontrado) {
            JOptionPane.showMessageDialog(null, "Alimentacion no encontrada");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void RegistrarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarAActionPerformed
        Interfaz info = new Interfaz();
        info.PrecargadaAL(info.arrAli);
        
        String animal = animaltxt.getText();
        String horario = horariotxt.getText();
        String alimento = consumirtxt.getText();
        String frecuencia = frecuenciatxt.getText();
        
        boolean ali = false;
        for (int i = 0; i < info.arrAli.length; i++) {
            if (info.arrAli[i] == null) {
                info.arrAli[i] = new Alimetos(animal, horario, alimento, frecuencia);
                ali = true;
                break;
            }
            
        }
        
        if (!ali) {
            JOptionPane.showMessageDialog(null, "no hay espacio para agregar mas visitantes");
            return;
        }
        
        StringBuilder sb = new StringBuilder("Habitats registrados:\n");
        for (int i = 0; i < info.arrAli.length; i++) {
            if (info.arrAli[i] != null) {
                sb.append(info.arrAli[i].toString()).append("\n");
            }
        }
        //muestra la informacion ya añadida
        JOptionPane.showMessageDialog(null, sb.toString());

    }//GEN-LAST:event_RegistrarAActionPerformed

    private void frecuenciatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frecuenciatxtActionPerformed
        String frecuencia = animaltxt.getText();
        
        JOptionPane.showMessageDialog(null, frecuencia);
       
        Interfaz visi = new Interfaz();
        visi.PrecargadaAL(visi.arrAli);
        
        for (int i = 0; i < visi.arrAli.length; i++) {
            if (visi.arrAli[i] == null) {
                visi.arrAli[i].setAnimal(frecuencia);
            }
        }

    }//GEN-LAST:event_frecuenciatxtActionPerformed

    private void animaltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animaltxtActionPerformed
         
        String animal = animaltxt.getText();
        
        JOptionPane.showMessageDialog(null, animal);
       
        Interfaz visi = new Interfaz();
        visi.PrecargadaAL(visi.arrAli);
        
        for (int i = 0; i < visi.arrAli.length; i++) {
            if (visi.arrAli[i] == null) {
                visi.arrAli[i].setAnimal(animal);
            }
        }
    }//GEN-LAST:event_animaltxtActionPerformed

    private void horariotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horariotxtActionPerformed
       String horario = horariotxt.getText();
        
        JOptionPane.showMessageDialog(null, horario);
       
        Interfaz hora = new Interfaz();
        hora.PrecargadaAL(hora.arrAli);
        
        for (int i = 0; i < hora.arrAli.length; i++) {
            if (hora.arrAli[i] == null) {
                hora.arrAli[i].setHorario(horario);
            }
        }
 
    }//GEN-LAST:event_horariotxtActionPerformed

    private void consumirtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumirtxtActionPerformed
        String consumo = consumirtxt.getText();
        
        JOptionPane.showMessageDialog(null, consumo);
       
        Interfaz consumir = new Interfaz();
        consumir.PrecargadaAL(consumir.arrAli);
        
        for (int i = 0; i < consumir.arrAli.length; i++) {
            if (consumir.arrAli[i] == null) {
                consumir.arrAli[i].setAlimentos(consumo);
            }
        }

    }//GEN-LAST:event_consumirtxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(RegistroAlimenticio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(RegistroAlimenticio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(RegistroAlimenticio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(RegistroAlimenticio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new RegistroAlimenticio().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Animalbutt;
    private javax.swing.JButton RegistrarA;
    private javax.swing.JTextField animaltxt;
    private javax.swing.JTextField consumirtxt;
    private javax.swing.JTextField frecuenciatxt;
    private javax.swing.JTextField horariotxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

 
}
